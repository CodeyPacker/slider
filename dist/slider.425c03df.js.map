{"version":3,"sources":["src/slider.js"],"names":["Slider","slider","Element","Error","slides","querySelector","prevButton","nextButton","startSlider","applyClasses","addEventListener","move","prototype","current","firstElementChild","prev","previousElementSibling","lastElementChild","next","nextElementSibling","classList","add","direction","classesToRemove","remove","mySlider","document","window","e","key"],"mappings":"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","file":"slider.425c03df.js","sourceRoot":"..","sourcesContent":["function Slider(slider) {\n  if (!(slider instanceof Element)) { // if an element isn't passed in\n    throw new Error('No slider passed in');\n  }\n\n  // select elements needed for the slider\n  this.slides = slider.querySelector('.slides');\n  this.slider = slider;\n  const prevButton = slider.querySelector('.goToPrev');\n  const nextButton = slider.querySelector('.goToNext');\n\n  // when this slider is created, run the start slider function\n  this.startSlider();\n  this.applyClasses();\n\n  // Event listeners\n  prevButton.addEventListener('click', () => this.move('back'));\n  nextButton.addEventListener('click', () => this.move());\n}\n\nSlider.prototype.startSlider = function() {\n  this.current = this.slider.querySelector('.current') || this.slides.firstElementChild;\n  this.prev = this.current.previousElementSibling || this.slides.lastElementChild;\n  this.next = this.current.nextElementSibling || this.slides.firstElementChild;\n}\n\nSlider.prototype.applyClasses = function() {\n  this.current.classList.add('current');\n  this.prev.classList.add('prev');\n  this.next.classList.add('next');\n}\n\nSlider.prototype.move = function(direction) {\n  // first strip all the classes off the current slides\n\n  const classesToRemove = ['prev', 'current', 'next'];\n  this.prev.classList.remove(...classesToRemove)\n  this.current.classList.remove(...classesToRemove)\n  this.next.classList.remove(...classesToRemove)\n  // OR be a hotshot and do it in one line\n  // [prev, current, next].forEach(el => el.classList.remove(...classesToRemove));\n\n  // use destructuring to easily shift them around\n  if (direction === 'back') {\n    [this.prev, this.current, this.next] = [\n      // get the prev slide, if there is none, get hte last slide\n      // from the entire slider for wrapping\n      this.prev.previousElementSibling || this.slides.lastElementChild,\n      this.prev,\n      this.current\n    ];\n  } else {\n    [this.prev, this.current, this.next] = [\n      this.current,\n      this.next,\n      this.next.nextElementSibling || this.slides.firstElementChild,\n    ];\n  }\n\n  this.applyClasses();\n}\n\nconst mySlider = new Slider(document.querySelector('.slider'));\n\nwindow.addEventListener('keyup', function(e) {\n  if (e.key === 'ArrowRight') {\n    mySlider.move();\n  };\n\n  if (e.key === 'ArrowLeft') {\n    mySlider.move('back');\n  };\n});\n"]}