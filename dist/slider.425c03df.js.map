{"version":3,"sources":["src/slider.js"],"names":["Slider","slider","Element","Error","prev","current","next","slides","querySelector","prevButton","nextButton","startSlider","firstElementChild","previousElementSibling","lastElementChild","nextElementSibling","applyClasses","classList","add","move","direction","classesToRemove","remove","addEventListener","mySlider","document","dogSlider"],"mappings":"AAAA,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAI,EAAEA,MAAM,YAAYC,OAApB,CAAJ,EAAkC;AAAE;AAClC,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,MAAIC,IAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,IAAJ,CAPsB,CAQtB;;AACA,MAAMC,MAAM,GAAGN,MAAM,CAACO,aAAP,CAAqB,SAArB,CAAf;AACA,MAAMC,UAAU,GAAGR,MAAM,CAACO,aAAP,CAAqB,WAArB,CAAnB;AACA,MAAME,UAAU,GAAGT,MAAM,CAACO,aAAP,CAAqB,WAArB,CAAnB;;AAEA,WAASG,WAAT,GAAuB;AACrBN,IAAAA,OAAO,GAAGJ,MAAM,CAACO,aAAP,CAAqB,UAArB,KAAoCD,MAAM,CAACK,iBAArD;AACAR,IAAAA,IAAI,GAAGC,OAAO,CAACQ,sBAAR,IAAkCN,MAAM,CAACO,gBAAhD;AACAR,IAAAA,IAAI,GAAGD,OAAO,CAACU,kBAAR,IAA8BR,MAAM,CAACK,iBAA5C;AACD;;AAED,WAASI,YAAT,GAAwB;AACtBX,IAAAA,OAAO,CAACY,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB;AACAd,IAAAA,IAAI,CAACa,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACAZ,IAAAA,IAAI,CAACW,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACD;;AAED,WAASC,IAAT,CAAcC,SAAd,EAAyB;AAAA;;AACvB;AACA,QAAMC,eAAe,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,MAApB,CAAxB;;AACA,uBAAAjB,IAAI,CAACa,SAAL,EAAeK,MAAf,wBAAyBD,eAAzB;;AACA,0BAAAhB,OAAO,CAACY,SAAR,EAAkBK,MAAlB,2BAA4BD,eAA5B;;AACA,uBAAAf,IAAI,CAACW,SAAL,EAAeK,MAAf,wBAAyBD,eAAzB,EALuB,CAMvB;AACA;AAEA;;;AACA,QAAID,SAAS,KAAK,MAAlB,EAA0B;AAAA,iBACA,CACtB;AACA;AACAhB,MAAAA,IAAI,CAACS,sBAAL,IAA+BN,MAAM,CAACO,gBAHhB,EAItBV,IAJsB,EAKtBC,OALsB,CADA;AACvBD,MAAAA,IADuB;AACjBC,MAAAA,OADiB;AACRC,MAAAA,IADQ;AAQzB,KARD,MAQO;AAAA,kBACmB,CACtBD,OADsB,EAEtBC,IAFsB,EAGtBA,IAAI,CAACS,kBAAL,IAA2BR,MAAM,CAACK,iBAHZ,CADnB;AACJR,MAAAA,IADI;AACEC,MAAAA,OADF;AACWC,MAAAA,IADX;AAMN,KAxBsB,CA0BvB;;;AACAU,IAAAA,YAAY;AACb,GArDqB,CAuDtB;;;AACAL,EAAAA,WAAW;AACXK,EAAAA,YAAY,GAzDU,CA2DtB;;AACAP,EAAAA,UAAU,CAACc,gBAAX,CAA4B,OAA5B,EAAqC;AAAA,WAAMJ,IAAI,CAAC,MAAD,CAAV;AAAA,GAArC;AACAT,EAAAA,UAAU,CAACa,gBAAX,CAA4B,OAA5B,EAAqCJ,IAArC;AACD;;AAED,IAAMK,QAAQ,GAAGxB,MAAM,CAACyB,QAAQ,CAACjB,aAAT,CAAuB,SAAvB,CAAD,CAAvB;AACA,IAAMkB,SAAS,GAAG1B,MAAM,CAACyB,QAAQ,CAACjB,aAAT,CAAuB,aAAvB,CAAD,CAAxB","file":"slider.425c03df.js","sourceRoot":"..","sourcesContent":["function Slider(slider) {\n  if (!(slider instanceof Element)) { // if an element isn't passed in\n    throw new Error('No slider passed in');\n  }\n\n  let prev;\n  let current;\n  let next;\n  // select elements needed for the slider\n  const slides = slider.querySelector('.slides');\n  const prevButton = slider.querySelector('.goToPrev');\n  const nextButton = slider.querySelector('.goToNext');\n\n  function startSlider() {\n    current = slider.querySelector('.current') || slides.firstElementChild;\n    prev = current.previousElementSibling || slides.lastElementChild;\n    next = current.nextElementSibling || slides.firstElementChild;\n  }\n\n  function applyClasses() {\n    current.classList.add('current');\n    prev.classList.add('prev');\n    next.classList.add('next');\n  }\n\n  function move(direction) {\n    // first strip all the classes off the current slides\n    const classesToRemove = ['prev', 'current', 'next'];\n    prev.classList.remove(...classesToRemove)\n    current.classList.remove(...classesToRemove)\n    next.classList.remove(...classesToRemove)\n    // OR be a hotshot and do it in one line\n    // [prev, current, next].forEach(el => el.classList.remove(...classesToRemove));\n\n    // use destructuring to easily shift them around\n    if (direction === 'back') {\n      [prev, current, next] = [\n        // get the prev slide, if there is none, get hte last slide\n        // from the entire slider for wrapping\n        prev.previousElementSibling || slides.lastElementChild,\n        prev,\n        current\n      ];\n    } else {\n      [prev, current, next] = [\n        current,\n        next,\n        next.nextElementSibling || slides.firstElementChild,\n      ];\n    }\n\n    // now that the elements have been updated, reapply classes\n    applyClasses();\n  }\n\n  // when this slider is created, run the start slider function\n  startSlider();\n  applyClasses();\n\n  // Event listeners\n  prevButton.addEventListener('click', () => move('back'));\n  nextButton.addEventListener('click', move);\n}\n\nconst mySlider = Slider(document.querySelector('.slider'));\nconst dogSlider = Slider(document.querySelector('.dog-slider'));"]}